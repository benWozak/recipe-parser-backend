version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: recipecatalogue-backend
    ports:
      - "8000:8000"
    environment:
      # Database
      - DATABASE_URL=postgresql://postgres:password@db:5432/recipecatalogue
      
      # Application Secret (generate using: python generate_secret_key.py)
      - SECRET_KEY=your-secret-key-here-generate-a-strong-random-key
      
      # Clerk Authentication (get from Clerk dashboard)
      - CLERK_SECRET_KEY=sk_test_your_clerk_secret_key_here
      - CLERK_PUBLISHABLE_KEY=pk_test_your_clerk_publishable_key_here
      - CLERK_WEBHOOK_SECRET=whsec_your_webhook_secret_here
      - CLERK_ISSUER=https://your-clerk-issuer.clerk.accounts.dev
      
      # CORS Configuration
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173
      
      # Optional API Keys (for enhanced features)
      - GOOGLE_CLOUD_VISION_CREDENTIALS=
      - OPENAI_API_KEY=
      
      # Rate Limiting
      - RATE_LIMIT_ENABLED=true
      
      # File Upload Settings
      - MAX_UPLOAD_SIZE=10485760  # 10MB
      - MIN_FILE_SECURITY_SCORE=70
    volumes:
      # Persistent media storage
      - media_data:/app/media
      # Logs
      - ./logs:/app/logs
    depends_on:
      - db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health', timeout=10)"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: recipecatalogue-db
    environment:
      - POSTGRES_DB=recipecatalogue
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: recipecatalogue-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@recipecatalogue.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - db
    restart: unless-stopped
    profiles:
      - dev  # Only start with: docker-compose --profile dev up

volumes:
  postgres_data:
    driver: local
  media_data:
    driver: local

networks:
  default:
    name: recipecatalogue-network