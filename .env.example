# HomeChef Companion Backend Environment Variables
# Copy this file to .env and fill in your actual values

# ============================================================================
# REQUIRED CONFIGURATION
# ============================================================================

# Application Secret Key (REQUIRED)
# Generate using: python generate_secret_key.py
# Must be at least 32 characters long
SECRET_KEY=your-secret-key-here-generate-a-strong-random-key

# Database Configuration (REQUIRED)
# For local development with docker-compose:
# DATABASE_URL=postgresql://postgres:password@localhost:5432/recipecatalogue
# For production (Neon, Railway, etc.):
DATABASE_URL=postgresql://username:password@ep-example-123456.us-east-2.aws.neon.tech/neondb?sslmode=require

# ============================================================================
# AUTHENTICATION - CLERK INTEGRATION
# ============================================================================

# Get these from your Clerk Dashboard (https://clerk.com/)
CLERK_SECRET_KEY=sk_test_your_clerk_secret_key_here
CLERK_PUBLISHABLE_KEY=pk_test_your_clerk_publishable_key_here
CLERK_WEBHOOK_SECRET=whsec_your_webhook_secret_here
CLERK_ISSUER=https://your-app-name.clerk.accounts.dev

# ============================================================================
# CORS CONFIGURATION
# ============================================================================

# Comma-separated list of allowed origins
# For development:
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://127.0.0.1:3000
# For production, add your frontend domain:
# ALLOWED_ORIGINS=https://your-frontend-domain.com,http://localhost:3000

# Production domains (optional - for additional validation)
PRODUCTION_ORIGINS=https://your-production-domain.com

# ============================================================================
# OPTIONAL API INTEGRATIONS
# ============================================================================

# Google Cloud Vision API (for OCR and image analysis)
# Set up service account and download JSON key, then set path:
GOOGLE_CLOUD_VISION_CREDENTIALS=/path/to/your/service-account-key.json

# OpenAI API (for AI-powered recipe extraction)
OPENAI_API_KEY=sk-your-openai-api-key-here

# ============================================================================
# RATE LIMITING CONFIGURATION
# ============================================================================

# Enable/disable rate limiting
RATE_LIMIT_ENABLED=true

# Rate limits (requests per time period)
DEFAULT_RATE_LIMIT=100/minute
AUTH_RATE_LIMIT=10/minute
PARSING_RATE_LIMIT=5/minute
FILE_UPLOAD_RATE_LIMIT=3/minute
INSTAGRAM_BATCH_RATE_LIMIT=2/hour
RECIPE_RATE_LIMIT=60/minute
COLLECTION_RATE_LIMIT=30/minute
USER_RATE_LIMIT=20/minute

# ============================================================================
# FILE UPLOAD & SECURITY SETTINGS
# ============================================================================

# Request size limits (bytes)
MAX_REQUEST_SIZE=10485760  # 10MB
MAX_UPLOAD_SIZE=10485760   # 10MB

# File security
MIN_FILE_SECURITY_SCORE=70  # 0-100, higher = more strict
MAX_FILE_UPLOAD_SIZE=10485760  # 10MB
MAX_IMAGE_DIMENSIONS=4096,4096  # Width,Height in pixels

# ============================================================================
# LOGGING CONFIGURATION
# ============================================================================

# Security logging
SECURITY_LOG_LEVEL=INFO
LOG_SECURITY_EVENTS=true
LOG_FILE_UPLOADS=true

# ============================================================================
# JWT CONFIGURATION
# ============================================================================

# JWT clock skew tolerance (seconds)
JWT_CLOCK_SKEW_TOLERANCE_SECONDS=5